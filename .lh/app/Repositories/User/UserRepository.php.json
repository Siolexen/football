{
    "sourceFile": "app/Repositories/User/UserRepository.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1665561628695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665561647724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n <?php\n \n namespace App\\Repositories\\User;\n \n-use App\\Enums\\User\\CredentialType;\n-use App\\Enums\\User\\UserType;\n use App\\Models\\User;\n use Illuminate\\Support\\Facades\\Hash;\n \n class UserRepository\n@@ -37,9 +35,9 @@\n      */\n     public function create(array $data): User\n     {\n         $user = new User;\n-        $user->name = $data['firstname'] . \" \" . $data['surname'];\n+        $user->name = $data['name'] . \" \" . $data['surname'];\n \n         $user->profile = [\n             'firstname' => $data['firstname'],\n             'surname' => $data['surname'],\n"
                },
                {
                    "date": 1665561662609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,11 @@\n      */\n     public function create(array $data): User\n     {\n         $user = new User;\n-        $user->name = $data['name'] . \" \" . $data['surname'];\n-\n+        $user->name = $data['name'];\n+        $user->email = $data['email'];\n+        \n         $user->profile = [\n             'firstname' => $data['firstname'],\n             'surname' => $data['surname'],\n             'email' => $data['email'],\n"
                },
                {
                    "date": 1665561674390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,43 +37,10 @@\n     {\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n-        \n-        $user->profile = [\n-            'firstname' => $data['firstname'],\n-            'surname' => $data['surname'],\n-            'email' => $data['email'],\n-            'headline' => $data['headline'] ?? null,\n-            'website' => $data['website'] ?? null,\n-            'phone' => $data['phone'] ?? null,\n-            'biography' => $data['biography'] ?? null,\n-            'location' => $data['location'] ?? null,\n-        ];\n \n-        $user->social = [\n-            'linkedin' => $data['linkedin'] ?? null,\n-            'twitter' => $data['twitter'] ?? null,\n-            'instagram' => $data['instagram'] ?? null,\n-            'facebook' => $data['facebook'] ?? null,\n-            'skype' => $data['skype'] ?? null,\n-            'youtube' => $data['youtube'] ?? null,\n-            'vimeo' => $data['vimeo'] ?? null,\n-            'github' => $data['github'] ?? null,\n-            'pinterest' => $data['pinterest'] ?? null,\n-        ];\n \n-        $user->active = $data['active'] ?? 0;\n-        $user->lang = $data['lang'] ?? config('app.locale');\n-        $user->type = $data['type'] ?? UserType::Organizer->value;\n-\n-        foreach (CredentialType::values() as $type) {\n-            $credentialTypes[$type] = $data['credentialType'] === $type;\n-        }\n-        $user->credential_types = $credentialTypes;\n-\n-        $user->email = $data['email'];\n-\n         if (\n             $data['credentialType'] == CredentialType::Password->value\n             && array_key_exists('password', $data)\n             && !empty($data['password'])\n"
                },
                {
                    "date": 1665561684131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n         $user->email = $data['email'];\n \n \n         if (\n-            $data['credentialType'] == CredentialType::Password->value\n             && array_key_exists('password', $data)\n             && !empty($data['password'])\n         ) {\n             $user->password = Hash::make($data['password']);\n"
                },
                {
                    "date": 1665561694933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,13 +38,8 @@\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n \n-\n-        if (\n-            && array_key_exists('password', $data)\n-            && !empty($data['password'])\n-        ) {\n             $user->password = Hash::make($data['password']);\n         }\n \n         if (auth()->check() && auth()->user()->isAdmin() && array_key_exists('admin', $data))\n"
                },
                {
                    "date": 1665561704222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,15 +37,9 @@\n     {\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n-\n-            $user->password = Hash::make($data['password']);\n-        }\n-\n-        if (auth()->check() && auth()->user()->isAdmin() && array_key_exists('admin', $data))\n-            $user->admin = $data['admin'] ?? 0;\n-\n+        $user->password = Hash::make($data['password']);\n         $user->save();\n \n         return $user;\n     }\n"
                },
                {
                    "date": 1665565378156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,43 +56,8 @@\n     public function update(array $data, User $user): User\n     {\n         if (isset($data['email'])) $user->email = $data['email'];\n \n-        $profile = (array) $user->profile;\n-        if (array_key_exists('firstname', $data)) $profile['firstname'] = $data['firstname'];\n-        if (array_key_exists('surname', $data)) $profile['surname'] = $data['surname'];\n-        if (array_key_exists('pemail', $data)) $profile['email'] = $data['pemail'];\n-        if (array_key_exists('headline', $data)) $profile['headline'] = $data['headline'];\n-        if (array_key_exists('website', $data)) $profile['website'] = $data['website'];\n-        if (array_key_exists('phone', $data)) $profile['phone'] = $data['phone'];\n-        if (array_key_exists('biography', $data)) $profile['biography'] = $data['biography'];\n-        if (array_key_exists('location', $data)) $profile['location'] = $data['location'];\n-        $user->profile = $profile;\n-\n-        if (array_key_exists('firstname', $data) || array_key_exists('surname', $data))\n-            $user->name = $profile['firstname'] . \" \" . $profile['surname'];\n-\n-        $social = (array) $user->social;\n-        if (array_key_exists('linkedin', $data)) $social['linkedin'] = $data['linkedin'];\n-        if (array_key_exists('twitter', $data)) $social['twitter'] = $data['twitter'];\n-        if (array_key_exists('instagram', $data)) $social['instagram'] = $data['instagram'];\n-        if (array_key_exists('facebook', $data)) $social['facebook'] = $data['facebook'];\n-        if (array_key_exists('skype', $data)) $social['skype'] = $data['skype'];\n-        if (array_key_exists('youtube', $data)) $social['youtube'] = $data['youtube'];\n-        if (array_key_exists('vimeo', $data)) $social['vimeo'] = $data['vimeo'];\n-        if (array_key_exists('github', $data)) $social['github'] = $data['github'];\n-        if (array_key_exists('pinterest', $data)) $social['pinterest'] = $data['pinterest'];\n-        $user->social = $social;\n-\n-        if (array_key_exists('lang', $data)) $user->lang = $data['lang'] ?? config('app.locale');\n-        if (array_key_exists('timezone', $data)) $user->timezone = $data['timezone'];\n-\n-        $credentialTypes = (array) $user->credential_types;\n-        foreach (CredentialType::values() as $type) {\n-            if (array_key_exists($type . \"Credential\", $data)) $credentialTypes[$type] = (bool) $data[$type . 'Credential'];\n-        }\n-        $user->credential_types = $credentialTypes;\n-\n         if (array_key_exists('password', $data) && !empty($data['password']))\n             $user->password = Hash::make($data['password']);\n \n         if (auth()->user()->isAdmin() && array_key_exists('admin', $data))\n"
                },
                {
                    "date": 1665565390708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,17 +16,8 @@\n         return User::where('email', '=', $email)->first();\n     }\n \n     /**\n-     * @param $userUuid\n-     * @return mixed\n-     */\n-    public function getNotVerifiedUserByUuid($userUuid): mixed\n-    {\n-        return User::where('uuid', $userUuid)->notVerified()->first() ?? null;\n-    }\n-\n-    /**\n      * Create User model with specific data.\n      *\n      * @param array $data\n      *\n@@ -59,11 +50,8 @@\n \n         if (array_key_exists('password', $data) && !empty($data['password']))\n             $user->password = Hash::make($data['password']);\n \n-        if (auth()->user()->isAdmin() && array_key_exists('admin', $data))\n-            $user->admin = $data['admin'] ?? 0;\n-\n         if ($user->isDirty())\n             $user->save();\n \n         return $user;\n"
                },
                {
                    "date": 1665565419417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,18 +69,5 @@\n     {\n         $user->delete();\n         return true;\n     }\n-\n-    /**\n-     * Get User with email.\n-     *\n-     * @param string $email\n-     *\n-     * @return User|null\n-     *\n-     */\n-    public function getWithEmail(string $email): User|null\n-    {\n-        return User::whereEmail($email)->first();\n-    }\n }\n"
                },
                {
                    "date": 1665565526588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,19 +55,5 @@\n             $user->save();\n \n         return $user;\n     }\n-\n-    /**\n-     * Delete User model.\n-     *\n-     * @param User $user\n-     *\n-     * @return bool\n-     *\n-     */\n-    public function delete(User $user): bool\n-    {\n-        $user->delete();\n-        return true;\n-    }\n }\n"
                },
                {
                    "date": 1665566445268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n         $user->password = Hash::make($data['password']);\n+        $user->password = Hash::make($data['password']);\n         $user->save();\n \n         return $user;\n     }\n"
                },
                {
                    "date": 1665566454659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n         $user->password = Hash::make($data['password']);\n-        $user->password = Hash::make($data['password']);\n+        $user->role_id = $data['name'];\n         $user->save();\n \n         return $user;\n     }\n"
                },
                {
                    "date": 1665566508752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         $user = new User;\n         $user->name = $data['name'];\n         $user->email = $data['email'];\n         $user->password = Hash::make($data['password']);\n-        $user->role_id = $data['name'];\n+        $user->role_id = $data['role_id'];\n         $user->save();\n \n         return $user;\n     }\n@@ -51,8 +51,11 @@\n \n         if (array_key_exists('password', $data) && !empty($data['password']))\n             $user->password = Hash::make($data['password']);\n \n+        if (isset($data['email'])) $user->email = $data['email'];\n+\n+        \n         if ($user->isDirty())\n             $user->save();\n \n         return $user;\n"
                },
                {
                    "date": 1665566519987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,11 @@\n \n         if (array_key_exists('password', $data) && !empty($data['password']))\n             $user->password = Hash::make($data['password']);\n \n-        if (isset($data['email'])) $user->email = $data['email'];\n+        if (isset($data['role_id'])) $user->role_id = $data['role_id'];\n \n-        \n+\n         if ($user->isDirty())\n             $user->save();\n \n         return $user;\n"
                },
                {
                    "date": 1665566560550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n             $user->password = Hash::make($data['password']);\n \n         if (isset($data['role_id'])) $user->role_id = $data['role_id'];\n \n-\n         if ($user->isDirty())\n             $user->save();\n \n         return $user;\n"
                }
            ],
            "date": 1665561628695,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Repositories\\User;\n\nuse App\\Enums\\User\\CredentialType;\nuse App\\Enums\\User\\UserType;\nuse App\\Models\\User;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UserRepository\n{\n    /**\n     * @param $email\n     * @return mixed\n     */\n    public function getUserByEmail(string $email): mixed\n    {\n        return User::where('email', '=', $email)->first();\n    }\n\n    /**\n     * @param $userUuid\n     * @return mixed\n     */\n    public function getNotVerifiedUserByUuid($userUuid): mixed\n    {\n        return User::where('uuid', $userUuid)->notVerified()->first() ?? null;\n    }\n\n    /**\n     * Create User model with specific data.\n     *\n     * @param array $data\n     *\n     * @return User\n     *\n     */\n    public function create(array $data): User\n    {\n        $user = new User;\n        $user->name = $data['firstname'] . \" \" . $data['surname'];\n\n        $user->profile = [\n            'firstname' => $data['firstname'],\n            'surname' => $data['surname'],\n            'email' => $data['email'],\n            'headline' => $data['headline'] ?? null,\n            'website' => $data['website'] ?? null,\n            'phone' => $data['phone'] ?? null,\n            'biography' => $data['biography'] ?? null,\n            'location' => $data['location'] ?? null,\n        ];\n\n        $user->social = [\n            'linkedin' => $data['linkedin'] ?? null,\n            'twitter' => $data['twitter'] ?? null,\n            'instagram' => $data['instagram'] ?? null,\n            'facebook' => $data['facebook'] ?? null,\n            'skype' => $data['skype'] ?? null,\n            'youtube' => $data['youtube'] ?? null,\n            'vimeo' => $data['vimeo'] ?? null,\n            'github' => $data['github'] ?? null,\n            'pinterest' => $data['pinterest'] ?? null,\n        ];\n\n        $user->active = $data['active'] ?? 0;\n        $user->lang = $data['lang'] ?? config('app.locale');\n        $user->type = $data['type'] ?? UserType::Organizer->value;\n\n        foreach (CredentialType::values() as $type) {\n            $credentialTypes[$type] = $data['credentialType'] === $type;\n        }\n        $user->credential_types = $credentialTypes;\n\n        $user->email = $data['email'];\n\n        if (\n            $data['credentialType'] == CredentialType::Password->value\n            && array_key_exists('password', $data)\n            && !empty($data['password'])\n        ) {\n            $user->password = Hash::make($data['password']);\n        }\n\n        if (auth()->check() && auth()->user()->isAdmin() && array_key_exists('admin', $data))\n            $user->admin = $data['admin'] ?? 0;\n\n        $user->save();\n\n        return $user;\n    }\n\n    /**\n     * Update $user model with specific data.\n     *\n     * @param array $data\n     * @param User $user\n     *\n     * @return User\n     *\n     */\n    public function update(array $data, User $user): User\n    {\n        if (isset($data['email'])) $user->email = $data['email'];\n\n        $profile = (array) $user->profile;\n        if (array_key_exists('firstname', $data)) $profile['firstname'] = $data['firstname'];\n        if (array_key_exists('surname', $data)) $profile['surname'] = $data['surname'];\n        if (array_key_exists('pemail', $data)) $profile['email'] = $data['pemail'];\n        if (array_key_exists('headline', $data)) $profile['headline'] = $data['headline'];\n        if (array_key_exists('website', $data)) $profile['website'] = $data['website'];\n        if (array_key_exists('phone', $data)) $profile['phone'] = $data['phone'];\n        if (array_key_exists('biography', $data)) $profile['biography'] = $data['biography'];\n        if (array_key_exists('location', $data)) $profile['location'] = $data['location'];\n        $user->profile = $profile;\n\n        if (array_key_exists('firstname', $data) || array_key_exists('surname', $data))\n            $user->name = $profile['firstname'] . \" \" . $profile['surname'];\n\n        $social = (array) $user->social;\n        if (array_key_exists('linkedin', $data)) $social['linkedin'] = $data['linkedin'];\n        if (array_key_exists('twitter', $data)) $social['twitter'] = $data['twitter'];\n        if (array_key_exists('instagram', $data)) $social['instagram'] = $data['instagram'];\n        if (array_key_exists('facebook', $data)) $social['facebook'] = $data['facebook'];\n        if (array_key_exists('skype', $data)) $social['skype'] = $data['skype'];\n        if (array_key_exists('youtube', $data)) $social['youtube'] = $data['youtube'];\n        if (array_key_exists('vimeo', $data)) $social['vimeo'] = $data['vimeo'];\n        if (array_key_exists('github', $data)) $social['github'] = $data['github'];\n        if (array_key_exists('pinterest', $data)) $social['pinterest'] = $data['pinterest'];\n        $user->social = $social;\n\n        if (array_key_exists('lang', $data)) $user->lang = $data['lang'] ?? config('app.locale');\n        if (array_key_exists('timezone', $data)) $user->timezone = $data['timezone'];\n\n        $credentialTypes = (array) $user->credential_types;\n        foreach (CredentialType::values() as $type) {\n            if (array_key_exists($type . \"Credential\", $data)) $credentialTypes[$type] = (bool) $data[$type . 'Credential'];\n        }\n        $user->credential_types = $credentialTypes;\n\n        if (array_key_exists('password', $data) && !empty($data['password']))\n            $user->password = Hash::make($data['password']);\n\n        if (auth()->user()->isAdmin() && array_key_exists('admin', $data))\n            $user->admin = $data['admin'] ?? 0;\n\n        if ($user->isDirty())\n            $user->save();\n\n        return $user;\n    }\n\n    /**\n     * Delete User model.\n     *\n     * @param User $user\n     *\n     * @return bool\n     *\n     */\n    public function delete(User $user): bool\n    {\n        $user->delete();\n        return true;\n    }\n\n    /**\n     * Get User with email.\n     *\n     * @param string $email\n     *\n     * @return User|null\n     *\n     */\n    public function getWithEmail(string $email): User|null\n    {\n        return User::whereEmail($email)->first();\n    }\n}\n"
        }
    ]
}