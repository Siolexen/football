{
    "sourceFile": "app/Policies/User/UserPolicy.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1665562001911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665567535549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,8 @@\n {\n     use HandlesAuthorization;\n \n     /**\n-     * Determine the administrator role.\n-     *\n-     * @param  \\App\\Models\\User\\User  $user\n-     * @return mixed\n-     */\n-    public function before(User $user)\n-    {\n-        if ($user->isAdmin()) {\n-            return true;\n-        }\n-    }\n-\n-    /**\n      * Determine whether the user can view any models.\n      *\n      * @param  \\App\\Models\\User\\User  $user\n      * @return mixed\n"
                },
                {
                    "date": 1665567551853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n      * @return mixed\n      */\n     public function view(User $user, User $model)\n     {\n-        return $user->id === $model->id;\n+        return false;\n     }\n \n     /**\n      * Determine whether the user can create models.\n"
                },
                {
                    "date": 1665567559933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n      * @return mixed\n      */\n     public function delete(User $user, User $model)\n     {\n-        return $user->id == $model->id;\n+        return false;\n     }\n \n     /**\n      * Determine whether the user can restore the model.\n"
                },
                {
                    "date": 1665567568488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,29 +65,5 @@\n     public function delete(User $user, User $model)\n     {\n         return false;\n     }\n-\n-    /**\n-     * Determine whether the user can restore the model.\n-     *\n-     * @param  \\App\\Models\\User\\User  $user\n-     * @param  \\App\\Models\\User\\User  $model\n-     * @return mixed\n-     */\n-    public function restore(User $user, User $model)\n-    {\n-        return false;\n-    }\n-\n-    /**\n-     * Determine whether the user can permanently delete the model.\n-     *\n-     * @param  \\App\\Models\\User\\User  $user\n-     * @param  \\App\\Models\\User\\User  $model\n-     * @return mixed\n-     */\n-    public function forceDelete(User $user, User $model)\n-    {\n-        return false;\n-    }\n }\n"
                }
            ],
            "date": 1665562001911,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Policies\\User;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine the administrator role.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @return mixed\n     */\n    public function before(User $user)\n    {\n        if ($user->isAdmin()) {\n            return true;\n        }\n    }\n\n    /**\n     * Determine whether the user can view any models.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @return mixed\n     */\n    public function viewAny(User $user)\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @param  \\App\\Models\\User\\User  $model\n     * @return mixed\n     */\n    public function view(User $user, User $model)\n    {\n        return $user->id === $model->id;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @return mixed\n     */\n    public function create(User $user)\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @param  \\App\\Models\\User\\User  $model\n     * @return mixed\n     */\n    public function update(User $user, User $model)\n    {\n        return $user->can('view', $model);\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @param  \\App\\Models\\User\\User  $model\n     * @return mixed\n     */\n    public function delete(User $user, User $model)\n    {\n        return $user->id == $model->id;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @param  \\App\\Models\\User\\User  $model\n     * @return mixed\n     */\n    public function restore(User $user, User $model)\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     *\n     * @param  \\App\\Models\\User\\User  $user\n     * @param  \\App\\Models\\User\\User  $model\n     * @return mixed\n     */\n    public function forceDelete(User $user, User $model)\n    {\n        return false;\n    }\n}\n"
        }
    ]
}